version: '3.8'

# for deployment

services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend/frontend.Dockerfile
    image: transcendence_frontend
    volumes:
      - ${PWD}:/app/
    ports:
      - 3000:3000
    restart: unless-stopped
    command: npm start
  backend:
    container_name: backend
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: docker/backend/backend.Dockerfile
    image: transcendence_backend
    volumes:
      - ${PWD}:/app/
    ports:
      - 8000:8000
    entrypoint: /app/docker/backend/backend.sh
    restart: unless-stopped
    depends_on:
      - db
  db:
    image: postgres
    container_name: database
    environment:
      POSTGRES_DB: transcend_users_db
      POSTGRES_USER: transcend_user
      POSTGRES_PASSWORD: transcend_pwd
    ports:
      - "5432:5432"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: "root:root"
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
      - ./docker/data/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/data'
      - '--storage.tsdb.retention.time=30d'
    restart: unless-stopped
  postgres-exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://transcend_user:transcend_pwd@db:5432/transcend_users_db?sslmode=disable
    ports:
      - "9187:9187"
    restart: unless-stopped
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    user: "root:root"
    ports:
      - '3200:3000'
    volumes:
      - ./docker/data/grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    restart: unless-stopped
